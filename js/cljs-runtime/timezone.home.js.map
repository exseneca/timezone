{"version":3,"sources":["timezone/home.cljs"],"mappings":"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","names":["timezone.home/get-time-value","js/document.getElementById","timezone.home/get-input-timezone-value","timezone.home/get-output-timezone-value","timezone.home/time-a","reagent.core.atom","timezone.home/input-timezone","timezone.home/output-timezone","timezone.home/timezones","cljs.core.js__GT_clj","js/Intl","timezone.home/reset-atoms","cljs.core/reset!","timezone.home/convert-time","in-time","input-tz","output-tz","js/module$node_modules$luxon$build$cjs_browser$luxon.DateTime","cljs.core/clj->js","timezone.home/home","e","cljs.core.println","iter__5523__auto__","s__40823","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__40825","cljs.core/chunk-buffer","i__40824","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__40822","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","timezone","s__40827","b__40829","i__40828","iter__40826","and__5043__auto__","cljs.core/deref","result","cljs.core._EQ_","timezone.home/init","reagent.dom.render","cljs.core/chunk-first"],"sourcesContent":["(ns timezone.home\n  (:require [reagent.core :as r]\n            [reagent.dom :as rdom]\n            [reagent.ratom :as ratom]\n            [\"luxon\" :refer (DateTime)]))\n\n\n\n(defn get-time-value []\n  (. (js/document.getElementById \"time\") -value))\n(defn get-input-timezone-value []\n  (. (js/document.getElementById \"input-timezone\") -value))\n(defn get-output-timezone-value []\n  (. (js/document.getElementById \"output-timezone\") -value))\n\n(def time-a (r/atom nil))\n(def input-timezone (r/atom nil))\n(def output-timezone (r/atom nil))\n(def timezones (js->clj (.supportedValuesOf js/Intl \"timeZone\")))\n\n\n(defn reset-atoms []\n  (reset! time-a (get-time-value))\n  (reset! input-timezone (get-input-timezone-value))\n  (reset! output-timezone (get-output-timezone-value)))\n\n(defn convert-time [in-time input-tz output-tz]\n  (-> (.fromISO DateTime in-time (clj->js {:zone input-tz}))\n      (.setZone output-tz)\n      (.toFormat \"T\"))\n  )\n\n(defn home []\n  [:<>\n   [:h1 \"Time zone converter\"]\n   [:p \"Enter time\"]\n   [:p]\n   [:form\n    [:input {:type \"time\" :id \"time\" :name \"time\"\n             :on-change (fn [e] (.preventDefault e) (println (get-time-value))\n                          (reset-atoms))}]\n    [:br] [:br]\n    [:label {:for \"input-timezone\"} \"Input time zone: \"]\n    [:select {:id \"input-timezone\" :name \"input-timezone\" :on-change (fn [e] (.preventDefault e) (reset-atoms)\n                                                                       (println (get-input-timezone-value)))}\n     (for [timezone timezones]\n       [:option {:value timezone} timezone])]\n    [:br] [:br]\n    [:label {:for \"input-timezone\"} \"Output time zone: \"]\n    [:select {:id \"output-timezone\" :name \"output-timezone\" :on-change (fn [e] (.preventDefault e) (reset-atoms))}\n     (for [timezone timezones]\n       [:option {:value timezone} timezone])]\n    (when (and @time-a @input-timezone @output-timezone)\n      [:p (let [result (convert-time @time-a @input-timezone @output-timezone)]\n            (if (= result \"Invalid DateTime\")\n              \"Please enter a time\"\n              result))])]])\n\n(defn ^:dev/after-load init []\n  (rdom/render [home] (js/document.getElementById \"root\")))\n"]}